@{
    ViewData["Title"] = "You Won!";
    var role = ViewData["Role"] as string; // Role passed from the controller
    var sessionId = ViewData["SessionId"] as string; // Session ID passed from the controller
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="/css/reset.css">
    <style>
        .btnWrap {
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 20px;
        }

        .btns {
            all: unset;
            margin-top: 20px;
            padding: 20px 40px;
            border-radius: 12px;
            font-size: 20px;
            font-weight: 700;
            color: #0C1B33;
            transition-duration: 0.3s;
            cursor: pointer;
        }

            .btns:hover {
                transform: scale(1.04);
                box-shadow: 5px 5px 5px rgba(1, 1, 1, 0.4);
            }

        .wrap .homeBtn {
            background-color: #99c252;
        }

        .playAgainBtn {
            background-color: #6e6ba6;
        }

        .endSession {
            display: none;
            background-color: #FF4B32;
        }

        @@media screen and (max-width: 450px) {
            .btnWrap {
                margin-top: 20px;
                flex-direction: column;
            }

            .btnWrap button {
                margin-top: 0;
                padding: 15px 30px;
                font-size: 18px;
            }

        }
    </style>
</head>
<body>
    <header>
        <form asp-controller="Home" asp-action="Index">
            <button class="homeBtn" type="Submit">Home</button>
        </form>
        <button id="logoutButton" class="logoutBtn">Log Out</button>
    </header>

    <div class="wrap">
        <div class="title cherry-cream-soda">
            You Completed the Quiz!
        </div>

        <div class="btnWrap">
            <button class="btns endSession" id="endSession">End Session</button>
            <form action="home"><button class="btns homeBtn" id="homeButton">Home</button></form>
            <form method="post"><button class="btns playAgainBtn">Play Again</button></form>
        </div>
    </div>
</body>
<script src="/scripts/logout.js"></script>
<script>
    window.onload = function () {
        const sessionId = '@sessionId';
        const role = '@role';

        if (sessionId && sessionId !== "null") {
            document.querySelector(".playAgainBtn").style.display = "none";

            if (role === "a") {
                document.getElementById("endSession").style.display = "block";
                document.getElementById("homeButton").style.display = "none";
            }

            document.querySelector(".endSession").onclick = function () {
                endModeration(sessionId);
            };
        } else {
            document.getElementById("endSession").style.display = "none";
            document.querySelector(".playAgainBtn").style.display = "block";
        }
    };

    function endModeration(modSessionId) {
            const currentSessionPath = window.location.pathname;
            const pathSegments = currentSessionPath.split('/');
            pathSegments.pop();
            const endSessionPath =  `/api/ModeratedSession?action=endModeratedSession&sessionId=${encodeURIComponent(modSessionId)}`;

            fetch(endSessionPath, {
                method: 'GET',
                headers: {
                    'Accept': 'application/json'
                }
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Failed to fetch the moderated session');
                    }
                    return response.json();
                });
            window.location.href = '/home';
        }
</script>
</html>
